CCS PCM C Compiler, Version 4.057, 4010               24-Aug-13 16:52

               Filename: main.lst

               ROM used: 114 words (3%)
                         Largest free fragment is 1934
               RAM used: 7 (3%) at main() level
                         8 (3%) worst case
               Stack:    3 locations

*
0000:  NOP
0001:  MOVLW  00
0002:  MOVWF  0A
0003:  GOTO   050
.................... #include <16F690.h> 
.................... //////// Standard Header file for the PIC16F690 device //////////////// 
.................... #device PIC16F690 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES HS 
.................... #FUSES INTRC_IO                 //Low power osc < 200 khz  LP 
.................... #FUSES NOPROTECT                //Code not protected from reading 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOMCLR                   //Master Clear pin used for I/O 
.................... #FUSES NOCPD                    //No EE protection 
.................... #FUSES NOPUT                    //No Power Up Timer 
.................... #FUSES NOIESO                   //Internal External Switch Over mode disabled 
.................... #FUSES NOFCMEN                  //Fail-safe clock monitor disabled 
....................  
.................... #include "main.h" 
.................... #define C0 PIN_C0 
.................... #define C1 PIN_C1 
.................... #define C2 PIN_C2 
.................... #define C3 PIN_C3 
.................... #define C6 PIN_C6 
.................... #define C7 PIN_C7 
....................  
.................... int count = 0; 
*
006B:  CLRF   25
....................  
.................... void button(); 
.................... void up_count(); 
.................... void down_count(); 
.................... void display(); 
.................... void reset(); 
....................  
....................  
.................... #use delay(clock=32000) 
*
0004:  MOVLW  02
0005:  SUBWF  26,F
0006:  BTFSS  03.0
0007:  GOTO   014
0008:  MOVLW  26
0009:  MOVWF  04
000A:  BCF    03.7
000B:  MOVF   00,W
000C:  BTFSC  03.2
000D:  GOTO   014
000E:  GOTO   012
000F:  GOTO   010
0010:  GOTO   011
0011:  NOP
0012:  DECFSZ 00,F
0013:  GOTO   00F
0014:  RETLW  00
....................  
.................... void main(void) 
.................... { 
*
0050:  CLRF   04
0051:  BCF    03.7
0052:  MOVLW  1F
0053:  ANDWF  03,F
0054:  MOVLW  01
0055:  BSF    03.5
0056:  MOVWF  0F
0057:  MOVF   0F,W
0058:  BCF    03.5
0059:  BSF    03.6
005A:  BCF    1F.0
005B:  BCF    1F.1
005C:  BCF    1F.2
005D:  BCF    1F.3
005E:  BCF    03.6
005F:  BCF    1F.6
0060:  MOVLW  00
0061:  BSF    03.6
0062:  MOVWF  1E
0063:  CLRF   19
0064:  CLRF   1A
0065:  BSF    03.5
0066:  CLRF   1E
0067:  BCF    03.5
0068:  CLRF   1B
0069:  BCF    03.6
006A:  BCF    0D.5
.................... 	SET_TRIS_C(192); // Sets the last 2 pins of port C to inputs 1100 000 
*
006C:  MOVLW  C0
006D:  BSF    03.5
006E:  MOVWF  07
.................... 	button(); // Calls the function button() 
006F:  BCF    03.5
0070:  GOTO   01E
.................... } 
....................  
.................... void button() 
.................... { 
0071:  GOTO   071
....................     while(true) // Loop forever 
.................... 	{ 
....................     	output_c(0); // Switch off the LEDs for blinking effect 
*
001E:  BSF    03.5
001F:  CLRF   07
0020:  BCF    03.5
0021:  CLRF   07
....................     	 
....................         if(input(C7) && input(C6)) // If both buttons are pressed 
0022:  BSF    03.5
0023:  BSF    07.7
0024:  BCF    03.5
0025:  BTFSS  07.7
0026:  GOTO   02E
0027:  BSF    03.5
0028:  BSF    07.6
0029:  BCF    03.5
002A:  BTFSS  07.6
002B:  GOTO   02E
....................         { 
....................             reset(); // Reset the count 
....................         } 
....................         else if(input(C6)) // If port C6 is activated 
*
002D:  GOTO   04C
002E:  BSF    03.5
002F:  BSF    07.6
0030:  BCF    03.5
0031:  BTFSS  07.6
0032:  GOTO   03D
....................         { 
....................             down_count(); // Count down once and display 
....................         } 
....................         else if(input(C7)) // If port C7 is activated 
*
003C:  GOTO   04C
003D:  BSF    03.5
003E:  BSF    07.7
003F:  BCF    03.5
0040:  BTFSS  07.7
0041:  GOTO   04C
....................         { 
....................             up_count(); // Count up once and display 
....................         } 
....................         display(); // Display everytime and when nothing is pressed. 
*
004C:  CALL   015
....................     }    
004D:  GOTO   01E
.................... } 
004E:  BCF    0A.3
004F:  GOTO   071 (RETURN)
....................  
.................... void reset() 
.................... { 
....................     count = 0; // Sets the global variable to 0, which means count == 0 
*
002C:  CLRF   25
.................... } 
....................  
.................... void up_count() 
.................... { 
....................     if (count < 15) // Prevent count from going higher than 15 
*
0042:  MOVF   25,W
0043:  SUBLW  0E
0044:  BTFSS  03.0
0045:  GOTO   04B
....................     { 
....................         count++; // Increment the global variable 
0046:  INCF   25,F
....................         delay_ms(100); // Delay for 100ms + 100ms in display() to create a 200ms delay 
0047:  MOVLW  64
0048:  MOVWF  26
0049:  CALL   004
....................         display(); // Display the new value 
004A:  CALL   015
004B:  NOP
....................     } 
.................... }        
....................  
.................... void down_count() 
.................... { 
....................     if (count > 0) // Prevent the count every going below 0 
*
0033:  MOVF   25,F
0034:  BTFSC  03.2
0035:  GOTO   03B
....................     { 
....................         count--; // Decrement the global variable 
0036:  DECF   25,F
....................         delay_ms(100); // Delay for 100ms + 100ms in display() to create a 200ms delay 
0037:  MOVLW  64
0038:  MOVWF  26
0039:  CALL   004
....................         display(); // Display the new value 
003A:  CALL   015
003B:  NOP
....................     } 
.................... } 
....................  
.................... void display() 
.................... { 
....................     delay_ms(100); // Wait 100ms before displaying anything 
*
0015:  MOVLW  64
0016:  MOVWF  26
0017:  CALL   004
....................     output_c(count); // Display the value of count on the LEDs 
0018:  BSF    03.5
0019:  CLRF   07
001A:  BCF    03.5
001B:  MOVF   25,W
001C:  MOVWF  07
.................... }     
001D:  RETLW  00
....................  
.................... //              /)/) 
.................... //             ( 0 0) 
.................... //             /'-._) 
.................... //            /#/ 
.................... //           /#/	Tighty Whities (Pty) Ltd. 
.................... //          /#/		(c) 2013. For Ze Party. 

Configuration Fuses:
   Word  1: 30D4   INTRC_IO NOPROTECT NOBROWNOUT NOMCLR NOCPD NOWDT NOPUT NOIESO NOFCMEN
